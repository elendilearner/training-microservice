image:
  repository: elendilearner/microservice-test
  tag: v4
  pullPolicy: Always

configmap:
  name: training-microservice-config
  db_url: jdbc:postgresql://postgres:5432/postgres
  microservice_port: "8000"

secret:
  name: training-microservice-secrets
  postgresPassword: 1trainingMicroservicePass2
  postgresUser: postgresUser

ingress:
  enabled: true
  class: nginx
  specificIngress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    host: arch.homework
    paths:
      - path: /otusapp/([^/]+)/?(.*)
        pathType: ImplementationSpecific
  commonIngress:
    host: arch.homework
    paths:
      - path: /health
        pathType: Prefix
      - path: /api/v1/user
        pathType: Prefix
  externalIngress:
    paths:
      - path: /health
        pathType: Prefix
      - path: /actuator/prometheus
        pathType: Prefix

service:
  app:
    name: training-microservice-service
    selector: training-microservice
    labels:
      app: training-microservice
      serviceType: training-microservice-service
    ports:
      - port: 80
        targetPort: 8000
  db:
    name: postgres
    selector: postgres
    ports:
      - port: 5432
        targetPort: 5432

deployment:
  app:
    name: training-microservice-deployment
    labels:
      name: training-microservice
    replicas: 1
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    container:
      name: training-microservice-container
      resources:
        requests:
          cpu: "500m"
          memory: "400Mi"
        limits:
          cpu: "1000m"
          memory: "1000Mi"
      livenessProbe:
        httpGet:
          path: /health
          port: 8000
        initialDelaySeconds: 150
        timeoutSeconds: 10
      readinessProbe:
        httpGet:
          path: /health
          port: 8000
        initialDelaySeconds: 150
        timeoutSeconds: 10
      port: 8000
    restartPolicy: Always
  postgresDeployment:
    name: postgres
    replicas: 1
    mountPath: /var/lib/postgresql/data
    containerPort: 5432

persistence:
  enabled: true
  persistentVolume:
    name: postgres-pv
    labels-type: local
    storageClassName: training-microservice-storage-class-name
    accessModes:
      - ReadWriteOnce
    capacity: 5Gi
    hostPath: /mnt/data