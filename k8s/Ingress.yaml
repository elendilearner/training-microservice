apiVersion: networking.k8s.io/v1  # It specifies the API version to use. The "networking.k8s.io" is the API group, and "v1" is the version, allowing Kubernetes to interact with network resources properly.
kind: Ingress  # It specifies the kind of Kubernetes resource we are defining, which in this case is Ingress, a way to manage external access to services.
metadata:
  name: training-microservice-ingress  # It defines the name of the Ingress object.
  annotations:  # It holds arbitrary metadata (key-value pairs) to store additional information, used by Ingress controllers and other tools.
    ingressClassName: "nginx"  # Specifies the class of the Ingress controller to use, which is nginx in this case.
    nginx.ingress.kubernetes.io/rewrite-target: /$2  # Specific annotation for Nginx Ingress Controller, defining a rewrite target for the path.

spec:
  rules:  # Holds a list of host rules used to route HTTP traffic.
    - host: arch.homework  # It defines the host to which the rule applies.
      http:
        paths:  # Contains a list of path patterns each associated with a backend service.
          - path: /otusapp/([^/]+)/?(.*)  # Defines a regex path pattern to match URLs and capture parts of them.
            pathType: ImplementationSpecific  # It implies that the interpretation of the path is up to the IngressClass. In this case, it enables regex.
            backend:
              service:
                name: training-microservice-service  # Specifies the name of the service to forward matched requests to.
                port:
                  number: 80  # Specifies the service port number to forward matched requests to.
    - http:
        paths:
          - path: /health  # Defines a specific path to match.
            pathType: Prefix  # It implies that any path with the specified prefix should match the rule.
            backend:
              service:
                name: training-microservice-service  # Specifies the name of the service to forward matched requests to.
                port:
                  number: 80  # Specifies the service port number to forward matched requests to.
